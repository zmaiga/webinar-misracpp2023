# === LICENSE ===

# === END USER LICENSE AGREEMENT ===
# Set to true to accept the Parasoft End User License Agreement (EULA).
# Please review the EULA.txt file included in the product installation directory.
parasoft.eula.accepted=true

# === LOCAL LICENSE ===
# Enables local license - be sure to specify password.
#cpptest.license.use_network=false

# Specifies password for the local license. 
#cpptest.license.local.password=[LICENSE PASSWORD]

# === NETWORK LICENSE ===
# Enables network license - be sure to configure DTP server settings.
cpptest.license.use_network=true

# Specifies type of the network license (edition).
# Supported editions: desktop_edition, desktop_compliance_edition, server_edition, server_compliance_edition
cpptest.license.network.edition=server_compliance_edition

license.network.url=https://192.168.56.1:8443
license.network.use.specified.server=true

# Enables specific list of license features.
#cpptest.license.network.edition=custom_edition
#cpptest.license.custom_edition_features=C++test,Static Analysis,Flow Analysis,Unit Test,Coverage,Automation,DTP Publish,Desktop Command Line,AUTOSAR Rules,CWE Rules,DISA STIG Rules,HIC++ Rules,JSF Rules,MISRA Rules,MISRA C 2012 Rules,MISRA C++ 2023 Rules,OWASP Rules,Security Rules,SEI CERT C Rules,SEI CERT C++ Rules,Code Dependency Export

# === DTP SERVER SETTINGS ===

# Specifies URL of the DTP server in the form https://host[:port][/context-path]
#dtp.url=https://localhost:8443

# Specifies user name for DTP server authentication.
#dtp.user=admin

# Specifies password for DTP server authentication - use cpptestcli -encodepass <PASSWORD> to encode the password, if needed.
#dtp.password=admin

# Specifies name of the DTP project - this settings is optional. 
#dtp.project=[DTP Project Name]

# Enables using common Parasoft Test settings stored on the DTP server. 
#dtp.autoconfig=true


# === CONFIGURATION ===

# Specifies default test configuration for the analysis.
# Used when -config switch is not specified in the command line.
#cpptest.configuration=builtin://Recommended Rules


# === COMPILER ===

# Specifies default compiler configuration for the analysis.
# Used when -compiler switch is not specified in the command line.
#cpptest.compiler.family=[compiler identifier]

# === USAGE DATA ===

# Enables sending usage data to Parasoft.
#usage.reporting.enabled=true

# === DTP REPORTING ===

# Enables reporting test results to DTP server - be sure to configure DTP server settings.
#report.dtp.publish=true

# Specifies a build identifier used to label results. It may be unique for each build
# but may also label more than one test sessions that were executed during a specified build.
#build.id=${dtp_project}-yyyy-MM-dd

# Specifies a tag which represents an unique identifier for the run, used to distinguish it from similar runs.
# It could be constructed as minimal combination of following variables that will make it unique or specified manually.
# e.g. ${config_name}-${project_module}-${scontrol_branch}-${exec_env}
#session.tag=[tag] 

# Specifies a set of tags that will be used to create coverage images in DTP server.
# Coverage images allow you to track different types of coverage, such as coverage for unit, functional, manual tests and others.
# There is a set of predefined tags that will be automatically recognized by DTP, see the examples below.
# You can also specify other tags that will be used to create coverage images.
#report.coverage.images=${dtp_project}
#report.coverage.images=${dtp_project};${dtp_project}_Unit Test
#report.coverage.images=${dtp_project};${dtp_project}_Functional Test
#report.coverage.images=${dtp_project};${dtp_project}_Manual Test


# === HTML / PDF REPORTS ===

# Determines whether the report includes an overview of the number and type of tasks assigned to each team member. 
#report.authors_details=true

# Determines whether the report includes an overview of the files that were checked or tests executed during testing.
#report.contexts_details=true

# Specifies whether the report shows requirements, defects, tasks, and feature requests that are associated with a test.
#report.associations=true


# === EMAILS ===

# Enables reporting test results by e-mail.
#report.mail.enabled=true

# Specifies mail server.
#report.mail.server=[server]

# Specifies mail domain.
#report.mail.domain=[domain]

# Specifies default sender of the e-mails.
#report.mail.from=[email|user_name] 

# Specifies default subject of the e-mails. 
#report.mail.subject=[subject] 


# === SCOPE AND AUTHORSHIP ===

# Enables code authorship computation, based on a data from a supported SCM system.
#scope.scontrol=true

# Enables source control integration on DTP server:
#    filtering by branches, viewing revisions, browsing code on the DTP server.
# Enables paths for locations, revision, branches and comments for quality tasks.
#    off: no information is reported
#    min: repositories, file paths and revisions are reported
#    full: also task revisions and comments are reported
#report.scontrol=min

# Use cpptestcli -encodepass <PASSWORD> to encode the passwords of source control users.

# === SUBVERSION ===
#scontrol.rep1.type=svn
#scontrol.rep1.svn.url=https\://foo.bar.com/svn
#scontrol.rep1.svn.login=[user name]
#scontrol.rep1.svn.password=[password]
#scontrol.svn.exec=C\:\\Program Files\\svn\\bin\\svn.exe

# === GIT ===
#scontrol.rep1.type=git
#scontrol.rep1.git.url=http\://foo.bar.com\:7990/git
#scontrol.rep1.git.branch=master
#scontrol.rep1.git.workspace=C\:\\workspace
#scontrol.git.exec=C\:\\Program Files (x86)\\Git\\bin\\git.exe

# === TEAM FOUNDATION SERVER ===
#scontrol.rep1.type=tfs
#scontrol.rep1.tfs.url=http\://foo.bar.com\:8080/tfs
#scontrol.rep1.tfs.login=[user name]
#scontrol.rep1.tfs.password=[password]

# === CONSOLE VERBOSITY LEVEL ===
# Increases console verbosity level to high.
#console.verbosity.level=high


# === TECHNICAL SUPPORT PACKAGE ===

# Enables technical support data collecting, it automatically enable verbose logging.
#techsupport.enabled=true

# Enables automatic creation of technical support during application shut down.
#techsupport.create.on.exit=true

# Specifies the technical support package location. Escape backslashes to provide the path.
#techsupport.archive.location=[output location]

# === FILE ENCODING  ===

# Specifies custom file-encoding - system encoding will be used as a default.
#file.encoding.mode=user
#file.encoding.name=UTF-8


# === FLOWANALYSIS: REUSE SERVER DATA ON DESKTOP: SERVER SETTINGS ===

#flowanalysis.storage.enabled=true
#flowanalysis.storage.path.mappings=WORKING_DIR=.;[additional_mappings]


# === FLOWANALYSIS: REUSE SERVER DATA ON DESKTOP: DESKTOP SETTINGS ===

#flowanalysis.storage.enabled=true
#flowanalysis.storage.path.mappings=WORKING_DIR=.;[additional_mappings]
#flowanalysis.storage.additional.locations=[server_cfg_dir]
#flowanalysis.storage.read.additional.data=*
#flowanalysis.storage.uptodate.check.dirs=.
